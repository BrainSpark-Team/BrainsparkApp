@page "/category/{CategoryType}"
@inject HttpClient Http

<div class="container">
	<div class="row">
		<div class="col-12">
			<div class="heading-title my-5 text-center">Unveiling the World of Knowledge: Your Exam Directory</div>
		</div>
		<div class="category-title">
		</div>
		<div>
			<NavLink class="my-auto back-btn" href="/categories">
				Back <img src="/Images/arrow-left.svg" />
			</NavLink>
		</div>
		@if (GetFilteredExams(CategoryType) != null)
		{
			@foreach (var exam in GetFilteredExams(CategoryType))
			{
				@if (exam.IsPubliclyAvailable)
					{
					<div class="col-12 col-md-12 col-lg-6">
						<CategoryCard AvailabilityEnd="@exam.AvailabilityEnd" AvailabilityStart="@exam.AvailabilityStart"
						TestDuration="@exam.TestDuration" TestId="@exam.examId" ImgUrl="@exam.ImgUrl" ImgAlt="@exam.ImgAlt"
						Title="@exam.Title" Difficulty="@exam.Difficulty" Questions="@exam.Questions" ModalTitle="@exam.Title"
						ModalId="@exam.examId" CategoryType="@exam.CategoryType"/>
					</div>
					}
			}
		}
		else
		{
			<div>No Category found.</div>
		}

	</div>
</div>

@code {
	[Parameter]
	public string CategoryType { get; set; } = string.Empty;

	private static List<ExamCategory> Categories = new List<ExamCategory>
	{
		new  ExamCategory
		{
			examId = 1,
			CategoryType= "Nature",
			ImgUrl = "https://source.unsplash.com/2gVgVf5CNAE",
			ImgAlt = "Nature picture",
			TimeLimit = "No time limit",
			Title = "Flower Test",
			Questions = 12,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = new DateTime(2023, 8, 21, 14, 3, 0),
			AvailabilityEnd = new DateTime(2023, 8, 21, 14, 43, 0),
			TestDuration = new TimeOnly(1, 30),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 2,
			CategoryType= "Nature",
			ImgUrl = "/Images/RiverPic.png",
			ImgAlt = "Nature picture",
			TimeLimit = "No time limit",
			Title = "Water Test",
			Questions = 14,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(10),
			AvailabilityEnd = DateTime.Now.AddDays(20),
			TestDuration = new TimeOnly(2, 30),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 3,
			CategoryType= "Nature",
			ImgUrl = "/Images/TreePic.png",
			ImgAlt = "Nature picture",
			TimeLimit = "No time limit",
			Title = "Tree Test",
			Questions = 20,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(40),
			AvailabilityEnd = DateTime.Now.AddDays(40),
			TestDuration = new TimeOnly(1, 20),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 4,
			CategoryType= "Nature",
			ImgUrl = "/Images/MountainPic.png",
			ImgAlt = "Nature picture",
			TimeLimit = "No time limit",
			Title = "Mountain Test",
			Questions = 16,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(15),
			AvailabilityEnd = DateTime.Now.AddDays(50),
			TestDuration = new TimeOnly(1, 15),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 5,
			CategoryType= "Biology",
			ImgUrl = "/Images/img2.jpg",
			TimeLimit = "No time limit",
			Title = "Biology Exam",
			Questions = 18,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(25),
			AvailabilityEnd = DateTime.Now.AddDays(60),
			TestDuration = new TimeOnly(0, 30),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 6,
			CategoryType= "Anatomy",
			ImgUrl = "/Images/img2.jpg",
			TimeLimit = "No time limit",
			Title = "Anatomy Exam",
			Questions = 12,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(22),
			AvailabilityEnd = DateTime.Now.AddDays(10),
			TestDuration = new TimeOnly(0, 45),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 7,
			CategoryType= "Technology",
			ImgUrl = "/Images/img1.jpg",
			TimeLimit = "No time limit",
			Title = "Technology Exam",
			Questions = 12,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(14),
			AvailabilityEnd = DateTime.Now.AddDays(14),
			TestDuration = new TimeOnly(0, 50),
			IsPubliclyAvailable = true
		},
		new  ExamCategory
		{
			examId = 8,
			CategoryType= "Geography",
			ImgUrl = "/Images/img1.jpg",
			TimeLimit = "No time limit",
			Title = "Geography Exam",
			Questions = 12,
			Difficulty = "Easy",
			LearningResources = "https://www.microsoft.com/ro-ro",
			AvailabilityStart = DateTime.Now.AddMinutes(4),
			AvailabilityEnd = DateTime.Now.AddDays(30),
			TestDuration = new TimeOnly(1, 0),
			IsPubliclyAvailable = true
		}
	};
	private IEnumerable<ExamCategory> GetFilteredExams(string categoryType)
	{
		return Categories.Where(e => e.CategoryType == categoryType);
	}

}
